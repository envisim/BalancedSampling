% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cubestratified.R
\name{cubestratified}
\alias{cubestratified}
\title{Stratified Cube method with pooling of landing phases}
\usage{
cubestratified(prob, x, strata, eps = 1e-12)
}
\arguments{
\item{prob}{A vector of length N with inclusion probabilities.}

\item{x}{An N by p matrix of (standardized) auxiliary variables.}

\item{strata}{An integer vector of length N with stratum numbers.}

\item{eps}{A small value used to determine when an updated probability is
close enough to 0.0 or 1.0.}
}
\value{
A vector of selected indices in 1,2,...,N.
}
\description{
Selects spatially balanced samples with prescribed inclusion probabilities
from a finite population.
}
\section{Inclusion probabilities}{

If the inclusion probabilities \code{prob} sum to an integer n, and the
inclusion probabilities are included as the first balancing variable,
the sample size is fixed (n).
prob, x eps, .cube_cpp, .cube_fast_cpp
}

\examples{
\dontrun{
set.seed(12345);
N = 1000;
n = 100;
prob = rep(n/N, N);
x = matrix(runif(N * 2), ncol = 2);
strata = c(rep(1L, 100), rep(2L, 200), rep(3L, 300), rep(4L, 400));
s = cubestratified(prob, x, strata);
plot(x[, 1], x[, 2]);
points(x[s, 1], x[s, 2], pch = 19);

set.seed(12345);
prob = c(0.2, 0.25, 0.35, 0.4, 0.5, 0.5, 0.55, 0.65, 0.7, 0.9);
N = length(prob);
x = matrix(runif(N * 2), ncol = 2);
strata = c(rep(1L, 1), rep(2L, 2), rep(3L, 3), rep(4L, 4));
ep = rep(0L, N);
r = 10000L;
for (i in seq_len(r)) {
  s = cubestratified(prob, x, strata);
  ep[s] = ep[s] + 1L;
}
print(ep / r);
}

}
\references{
Deville, J. C. and Tillé, Y. (2004).
Efficient balanced sampling: the cube method.
Biometrika, 91(4), 893-912.

Chauvet, G. and Tillé, Y. (2006).
A fast algorithm for balanced sampling.
Computational Statistics, 21(1), 53-62.

Chauvet, G. (2009).
Stratified balanced sampling.
Survey Methodology, 35, 115-119.
}
